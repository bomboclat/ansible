---

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- include_tasks: "setup-{{ ansible_os_family }}.yml"

- name: Create Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
  with_items:
    - "{{ mongodb_cs_dbpath }}"
    - "{{ mongodb_cs_logpath }}"
    - "{{ mongodb_cs_pidfilepath }}"
    - "{{ mongodb_qr_logpath }}"
    - "{{ mongodb_sn_dbpath }}"
    - "{{ mongodb_sn_logpath  }}"
    - "{{ mongodb_sn_pidfilepath }}"

# Config Server
- name: Copy Config Server Configuration File
  template:
    src: mongod-cs.conf.j2
    dest: "{{ mongodb_cs_config_file }}"
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: restart mongod-cs

- name: Copy Config Server Systemd Service
  template:
    src: mongod-cs.service.j2
    dest: /etc/systemd/system/mongod-cs.service
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: reload systemd configuration

# Query Router
- name: Copy Query Router Configuration File
  template:
    src: mongos-qr.conf.j2
    dest: "{{ mongodb_qr_config_file }}"
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: restart mongos-qr

- name: Copy Query Router Systemd Service
  template:
    src: mongos-qr.service.j2
    dest: /etc/systemd/system/mongos-qr.service
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: reload systemd configuration

# Shard Node
- name: Copy Shard Node Configuration File
  template:
    src: mongod-sn.conf.j2
    dest: "{{ mongodb_sn_config_file }}"
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: restart mongod-sn

- name: Copy Shard Node Systemd Service
  template:
    src: mongod-sn.service.j2
    dest: /etc/systemd/system/mongod-sn.service
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: reload systemd configuration

# Mongo configurations
- name: Flushing all pending handlers before creating Mongo specific configuratons
  meta: flush_handlers

- block:
    - name: Push mongo-check-rs.js
      copy:
        dest: 'mongo-check-rs.js'
        src: 'mongo-check-rs.js'

    # Mongo CS - Config Server
    - name: "Check for port {{ mongodb_cs_port }} on {{ graylog_mongo_master_node }} to be accessible"
      wait_for:
        host: "{{ graylog_mongo_master_node }}"
        port: "{{ mongodb_cs_port }}"
        state: started
        delay: 5

    - name: Create Config Server cs.js file
      template:
        dest: 'cs.js'
        src: 'mongo/cs.js.j2'

    - name: Check if Mongo Config Server is already active
      shell: |
        mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_cs_port }} --quiet mongo-check-rs.js
      register: mongo_initial_cs_status
      changed_when: false
      failed_when: false

    - block:
        - name: Create Config Server in Mongo
          shell: |
            mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_cs_port }} < cs.js

        - name: Check Mongo Config Server status
          shell: |
            mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_cs_port }} --quiet mongo-check-rs.js
          register: mongo_cs_status
          changed_when: false
          until: mongo_cs_status.stdout == 'OK'
          retries: 5
          delay: 5
      when:
        - mongo_initial_cs_status.stdout != 'OK'

    # Mongo SN - Shard Node
    - name: "Check for port {{ mongodb_sn_port }} on {{ graylog_mongo_master_node }} to be accessible"
      wait_for:
        host: "{{ graylog_mongo_master_node }}"
        port: "{{ mongodb_sn_port }}"
        state: started
        delay: 5

    - name: Create Shard node sn.js file
      template:
        dest: 'sn.js'
        src: 'mongo/sn.js.j2'

    - name: Check if Mongo Shard Node is already active
      shell: |
        mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_sn_port }} --quiet mongo-check-rs.js
      register: mongo_initial_sn_status
      changed_when: false
      failed_when: false

    - block:
        - name: Create Shard Node in Mongo
          shell: |
            mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_sn_port }} < sn.js

        - name: Check Mongo Shard Node status
          shell: |
            mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_sn_port }} --quiet mongo-check-rs.js
          register: mongo_sn_status
          changed_when: false
          until: mongo_sn_status.stdout == 'OK'
          retries: 5
          delay: 5
      when:
        - mongo_initial_sn_status.stdout != 'OK'

    # Mongo QR - Query Router
    - name: "Check for port {{ mongodb_qr_port }} on {{ graylog_mongo_master_node }} to be accessible"
      wait_for:
        host: "{{ graylog_mongo_master_node }}"
        port: "{{ mongodb_qr_port }}"
        state: started
        delay: 5

    - name: Create qr.js file
      template:
        dest: 'qr.js'
        src: 'mongo/qr.js.j2'

    - name: Create Mongo QR - Query Router
      shell: |
        mongo --host {{ graylog_mongo_master_node }} --port {{ mongodb_qr_port }} --quiet qr.js
  when:
    - graylog_server_is_master is defined
    - graylog_server_is_master|bool
