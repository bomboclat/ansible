---

- block:
    - name: Adding MariaDB yum repository
      yum_repository:
        name: mariadb
        description: MariaDB Yum Repository
        baseurl: "http://yum.mariadb.org/{{ mariadb_client_version }}/centos{{ ansible_distribution_major_version }}-amd64"
        gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
        gpgcheck: yes
    
    - name: Installing MariaDB-client
      package:
        name:
          - MariaDB-client
        state: present
  become: true
  when: ansible_os_family == "RedHat"

- block:
    - name: Get MariaDB APT repository key
      apt_key:
        url: https://mariadb.org/mariadb_release_signing_key.asc

    - name: Adding MariaDB apt repository
      apt_repository:
        repo: "deb https://mirror.terrahost.no/mariadb/repo/{{ mariadb_client_version }}/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} main"

    - name: Installing mariadb-client
      package:
        name:
          - mariadb-client
  become: true
  when: ansible_os_family == "Debian"

- name: "Set mysql command fact"
  set_fact:
    mysql_command: "mysql {% if mysql_force_ssl|bool %}--ssl {% endif %}--host={{ mysql_host }} --user={{ mysql_admin_login }} --password={{ mysql_admin_password }} --skip-column-names --batch -e"

- name: "Check MySql connectivity"
  command: "{{ mysql_command }} \"SHOW STATUS\""
  changed_when: false

- name: "Generate user and password dict"
  set_fact:
    mysql_passwords: "{{ mysql_passwords|default({}) | combine( {item.name: {'password': item.password, 'force': item.force_password }} ) }}"
  no_log: true
  with_items:
    - "{{ mysql_users }}"

- name: "Manage DB"
  include_tasks: manage_database.yml
  with_items:
    - "{{ mysql_databases }}"
  loop_control:
    loop_var: mysql_database
