---

# Terraform Azure specifications

# These variables are needed to store the Terraform tfstate on Azure, so
# multiple users can run Terraform on the same environment
terraform_config_dir: 'terraform/myazureenv'
terraform_tfstate_on_azure_storage_container: 'mytfstoragecontainer'
azure_tfstate_resource_group_name: 'mytfstoragecontainer-terraform-tfstate'

# The Resource Group and the location for all Azure resources
azure_resource_group_name: 'My-Resource-Group'
azure_location: 'ukwest'

# Azure informations provided by the account manager
azure_subscription_id: '<azure_subscription_id>'
azure_client_id: '<azure_client_id>'
azure_client_secret: '<azure_client_secret>'
azure_tenant_id: '<azure_tenant_id>'

# These are the default configurations for VMs login
azure_vm_admin_username: 'admin'
azure_vm_admin_ssh_public_key_file: 'terraform/myazureenv/azure-private/admin.pub'
azure_vm_disable_password_authentication: true

# Default VM image for Azure deployment
azure_vm_image:
  publisher: 'OpenLogic'
  offer: 'CentOS'
  sku: '7_7-gen2'
  version: '7.7.2020042901'

# Azure vNets configuration
azure_vnets:
  - name: 'my_vnet'
    addr_space: '192.168.0.0/23'
    # If you need S2S VPNs
    gateway_name: 'my_vnet_vpn_gateway'
    gateway_subnet_name: 'my_vnet_subnet_gateway'
    gateway_name_ip_name: 'my_vnet_gateway_config'
    gateway_subnet_prefix: '192.168.0.240/28'
    # Here you can define your subnets
    subnets:
      - name: 'my_subnet_server'
        prefixes:
          - '192.168.0.0/24'
        endpoints:
          - 'Microsoft.Storage'
    # You can peer with other Azure vNets
    peer_with: {}
    # Here the VPNs configuration
    # localnetworkgws:
    #   - name: 'my_remote_network'
    #     prefix:
    #       - 192.168.10.0/24
    #       - 192.168.20.0/24
    #     remote_peer: <your VPN public ip>
    #     shared_key: '<your shared key>'
    #     # If you need you can deep dive with the VPN customization
    #     #protocol: IKEv2
    #     #policy_based: false
    #     #policy:
    #     #  dh_group: DHGroup2
    #     #  ike_encryption: AES256
    #     #  ike_integrity: SHA1
    #     #  ipsec_encryption: AES256
    #     #  ipsec_integrity: SHA1
    #     #  pfs_group: PFS2
    #     #  sa_lifetime: 28800

# If you need a public ip
azure_public_ips:
  - name: mypublicip01

# Firewall rules
azure_securityrules:
  - name: 'Allow_HAProxy_on_webserver'
    priority: 100
    direction: 'Inbound'
    access: 'Allow'
    protocol: 'Tcp'
    source_port_range: '*'
    source_address_prefix: '*'
    destination_port_ranges:
      - 80
      - 443
    destination_address_prefix: '192.168.0.10'
  - name: 'Allow_SMTP_on_mailserver'
    priority: 101
    direction: 'Inbound'
    access: 'Allow'
    protocol: 'Tcp'
    source_port_range: '*'
    source_address_prefix: '*'
    destination_port_ranges:
      - 25
    destination_address_prefix: '192.168.0.20'

# Azure Storage definition
azure_storage_account_name: 'ukdrcommifyprodsa'
azure_storages:
  - name: mybackupstorage
    kind: BlockBlobStorage
    allowed_subnets:
      - 'my_subnet_server'
    containers:
      - name: db-backup

# Azure key vault
azure_key_vault_enable: true
azure_key_vault_name: 'my-prod-vault'
azure_key_vault_keyname: 'my-prod-vaultkey'

# Defining the security group name
azure_network_sec_group_name: 'my_network_sec_group_01'

# Here a list of Ansible inventory groups which contains the VMs.
azure_vms_groups:
  - 'terraform_mailservers'
  - 'terraform_frontends'
